MultiScaleModel.generate do

model :my_multi_model do

       implementation_type :muscle_application
       
       
    model :submodelA do
       
        implementation_type :muscle_kernel
        
        

	language :java

	timescale :delta=>10, :max=>100

	execution do
	#TODO:
        	declare_param :len=>4
                declare_port :velocity, :double_array, :len
		


		loop :start_time=>0, :stop_time=>10, :step_time=>1 do


  			execute "
                        System.out.println(\"Sending velocity values\");
  			for(int i=0; i<velocity.length; i++){
    			velocity[i]=4;
  			}
  			"
  			send :velocity

		end
                execute "
                 System.out.println(\"The end\");
                "
	end

    end

    model :submodelB do

	implementation_type :muscle_kernel


	language :java

	timescale :delta=>10, :max=>100

	execution do

	declare_port :velocity, :double_array
        

	loop :start_time=>0, :stop_time=>10, :step_time=>1 do

  		receive :velocity

  		execute "
                        System.out.println(\"Receiving velocity values\");
  			for(int i=0; i<velocity.length; i++){
    			System.out.println(velocity[i]);
  		}
  		"
	end
        execute "
                 System.out.println(\"The end\");
        "

	end

    end



    execution  do

	instance  :modA, :submodelA, :domainA
	instance  :modB, :submodelB, :domainA

	join :modA, :modB  do 
	    tie :velocity, :velocity
	end
    end

end # my_multi_model


end #generate


